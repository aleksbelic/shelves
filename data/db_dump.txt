create table public.author (
  id bigint generated by default as identity not null,
  name text not null,
  constraint author_pkey primary key (id),
  constraint author_name_key unique (name)
) TABLESPACE pg_default;

create table public.publisher (
  id bigint generated by default as identity not null,
  name character varying not null,
  constraint publisher_pkey primary key (id),
  constraint publisher_name_key unique (name)
) TABLESPACE pg_default;

create table public.reading_status (
  id bigint generated by default as identity not null,
  status text not null,
  constraint reading_status_pkey primary key (id),
  constraint reading_status_status_name_key unique (status)
) TABLESPACE pg_default;

create table public.language (
  id bigint generated by default as identity not null,
  name text not null,
  code text not null,
  constraint language_pkey primary key (id),
  constraint language_code_key unique (code),
  constraint language_name_key unique (name)
) TABLESPACE pg_default;

create table public.book (
  id bigint generated by default as identity not null,
  title text not null,
  publisher_id bigint not null,
  isbn text not null,
  edition bigint null,
  publish_year bigint null,
  language_id bigint not null,
  constraint book_pkey primary key (id),
  constraint book_isbn_key unique (isbn),
  constraint book_language_id_fkey foreign KEY (language_id) references language (id) on update CASCADE on delete RESTRICT,
  constraint book_publisher_id_fkey foreign KEY (publisher_id) references publisher (id) on update CASCADE on delete RESTRICT,
  constraint book_isbn_check check ((length(isbn) <= 20))
) TABLESPACE pg_default;

create table public.book_author (
  book_id bigint not null,
  author_id bigint not null,
  constraint book_author_pkey primary key (book_id, author_id),
  constraint book_author_author_id_fkey foreign KEY (author_id) references author (id) on update CASCADE on delete RESTRICT,
  constraint book_author_book_id_fkey foreign KEY (book_id) references book (id) on update CASCADE on delete RESTRICT
) TABLESPACE pg_default;

create table public.book_reading_status (
  book_id bigint not null,
  reading_status_id bigint not null,
  constraint book_reading_status_pkey primary key (book_id, reading_status_id),
  constraint book_reading_status_book_id_fkey foreign KEY (book_id) references book (id) on update CASCADE on delete RESTRICT,
  constraint book_reading_status_reading_status_id_fkey foreign KEY (reading_status_id) references reading_status (id) on update CASCADE on delete RESTRICT
) TABLESPACE pg_default;

INSERT INTO "public"."author" ("id", "name") VALUES ('1', 'Vladimir Belić'), ('2', 'Emilo Belić'), ('3', 'Miloš Janković'), ('4', 'Tomislav Gavrić'), ('5', 'Dragan Simović'), ('6', 'Dan Brown'), ('7', 'Nenad Džoni Racković'), ('8', 'Aleksa Gajić');

INSERT INTO "public"."publisher" ("id", "name") VALUES ('1', 'Medija centar "Odbrana"'), ('2', 'Solaris'), ('3', 'System comics');

INSERT INTO "public"."book" ("id", "title", "publisher_id", "isbn", "edition", "publish_year") VALUES ('1', 'Vojvoda Radomir Putnik', '1', '9788633505253', '3', '2024'), ('2', 'Vojvoda Stepa Stepanović', '1', '9788633505246', '3', '2024'), ('3', 'Vojvoda Živojin Mišić', '1', '9788633505260', '3', '2024'), ('4', 'Vojvoda Petar Bojović', '1', '9788633505277', '3', '2024'), ('5', 'Digitalna tvrđava', '2', '9788675600831', '2', '2010'), ('6', 'Kralj ničega', '3', '9788689309874', null, '2024');

INSERT INTO "public"."book_author" ("book_id", "author_id") VALUES ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('4', '5'), ('5', '6'), ('6', '7'), ('6', '8');

CREATE OR REPLACE VIEW public.books_full_view AS
SELECT
  b.id,
  b.title,
  b.isbn,
  b.edition,
  b.publish_year,
  p.name AS publisher_name,
  l.name AS language_name,
  rs.status AS reading_status,
  ARRAY_AGG(DISTINCT a.name ORDER BY a.name) AS authors
FROM
  public.book b
JOIN
  public.publisher p ON b.publisher_id = p.id
JOIN
  public.language l ON b.language_id = l.id
LEFT JOIN
  public.book_author ba ON b.id = ba.book_id
LEFT JOIN
  public.author a ON ba.author_id = a.id
LEFT JOIN
  public.book_reading_status brs ON b.id = brs.book_id
LEFT JOIN
  public.reading_status rs ON brs.reading_status_id = rs.id
GROUP BY
  b.id, b.title, b.isbn, b.edition, b.publish_year,
  p.name, l.name, rs.status;